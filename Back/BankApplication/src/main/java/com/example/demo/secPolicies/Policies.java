package com.example.demo.secPolicies;

import javax.persistence.Column;
import javax.persistence.Entity;

import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.Columns;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Entity
@Table
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Policies {
	
	
	@Id
	@GeneratedValue
	public Long id;
	public int code;
	public String description;
	
	@Column(nullable = false)
	public int applicationId;
	
	@Column(nullable = false)
	public boolean autoGeneratedPass;
	
	public boolean verifyEmail;
	public boolean preventPassRe;
	
	@Column(nullable = false)
	public String twoFactorAuth;
	
	@Column(nullable = false)
	public boolean enableCentralAuth;
	
	public int maxLoginAttempt;
	
	@Column(nullable = false)
	public int minimumPassword;
	
	@Column(nullable = false)
	public int passwordPreExpiry;
	
	@Column(nullable = false)
	public int passwordChange;
	
	@Column(nullable = false)
	public boolean enforceAllowedIp;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public int getCode() {
		return code;
	}

	public void setCode(int code) {
		this.code = code;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public int getApplicationId() {
		return applicationId;
	}

	public void setApplicationId(int applicationId) {
		this.applicationId = applicationId;
	}

	public boolean isAutoGeneratedPass() {
		return autoGeneratedPass;
	}

	public void setAutoGeneratedPass(boolean autoGeneratedPass) {
		this.autoGeneratedPass = autoGeneratedPass;
	}

	public boolean isVerifyEmail() {
		return verifyEmail;
	}

	public void setVerifyEmail(boolean verifyEmail) {
		this.verifyEmail = verifyEmail;
	}

	public boolean isPreventPassRe() {
		return preventPassRe;
	}

	public void setPreventPassRe(boolean preventPassRe) {
		this.preventPassRe = preventPassRe;
	}

	public String getTwoFactorAuth() {
		return twoFactorAuth;
	}

	public void setTwoFactorAuth(String twoFactorAuth) {
		this.twoFactorAuth = twoFactorAuth;
	}

	public boolean isEnableCentralAuth() {
		return enableCentralAuth;
	}

	public void setEnableCentralAuth(boolean enableCentralAuth) {
		this.enableCentralAuth = enableCentralAuth;
	}

	public int getMaxLoginAttempt() {
		return maxLoginAttempt;
	}

	public void setMaxLoginAttempt(int maxLoginAttempt) {
		this.maxLoginAttempt = maxLoginAttempt;
	}

	public int getMinimumPassword() {
		return minimumPassword;
	}

	public void setMinimumPassword(int minimumPassword) {
		this.minimumPassword = minimumPassword;
	}

	public int getPasswordPreExpiry() {
		return passwordPreExpiry;
	}

	public void setPasswordPreExpiry(int passwordPreExpiry) {
		this.passwordPreExpiry = passwordPreExpiry;
	}

	public int getPasswordChange() {
		return passwordChange;
	}

	public void setPasswordChange(int passwordChange) {
		this.passwordChange = passwordChange;
	}

	public boolean isEnforceAllowedIp() {
		return enforceAllowedIp;
	}

	public void setEnforceAllowedIp(boolean enforceAllowedIp) {
		this.enforceAllowedIp = enforceAllowedIp;
	}

	public Policies(int code, String description, int applicationId, boolean autoGeneratedPass, boolean verifyEmail,
			boolean preventPassRe, String twoFactorAuth, boolean enableCentralAuth, int maxLoginAttempt,
			int minimumPassword, int passwordPreExpiry, int passwordChange, boolean enforceAllowedIp) {

		this.code = code;
		this.description = description;
		this.applicationId = applicationId;
		this.autoGeneratedPass = autoGeneratedPass;
		this.verifyEmail = verifyEmail;
		this.preventPassRe = preventPassRe;
		this.twoFactorAuth = twoFactorAuth;
		this.enableCentralAuth = enableCentralAuth;
		this.maxLoginAttempt = maxLoginAttempt;
		this.minimumPassword = minimumPassword;
		this.passwordPreExpiry = passwordPreExpiry;
		this.passwordChange = passwordChange;
		this.enforceAllowedIp = enforceAllowedIp;
	}

	public Policies() {
	
	}

	@Override
	public String toString() {
		return "Policies [id=" + id + ", code=" + code + ", description=" + description + ", applicationId="
				+ applicationId + ", autoGeneratedPass=" + autoGeneratedPass + ", verifyEmail=" + verifyEmail
				+ ", preventPassRe=" + preventPassRe + ", twoFactorAuth=" + twoFactorAuth + ", enableCentralAuth="
				+ enableCentralAuth + ", maxLoginAttempt=" + maxLoginAttempt + ", minimumPassword=" + minimumPassword
				+ ", passwordPreExpiry=" + passwordPreExpiry + ", passwordChange=" + passwordChange
				+ ", enforceAllowedIp=" + enforceAllowedIp + "]";
	}
	
	
	
}
